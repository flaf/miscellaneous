Le nom du serveur sera *webradio*

Ce qu'il reste à faire etc.

- le serveur s'appellera webradio.
  L'ancien possède 2Go de RAM et 4 CPUs (en fait 2 CPUs avec 2 threads chacun).
  C'est une VM sur proxmox-3.

- Quand ce sera ok, il faudra virer dans liste_ip l'entrée:
  195.221.97.64 radio (VM virtualbox de test, temporaire, pour la Web-radio sur le PC de bureau de flaf)

- A priori, il serait possible de faire du ssl pour les
  "source clients" et du http sans ssl pour les listeners.
  À creuser parce qu'en l'état le mot de passe envoyé
  par un "source client" pour se connecter à un point de
  diffusion circule en clair. En fait, si j'ai bien compris
  ça consiste à faire écouter icecast2 sur 2 ports : le 80
  en http et le 443 en https si bien qu'un source client
  peut utiliser le https et les listeners le 443 (mais
  on ne peut pas empêcher un "source client" d'utiliser
  le 80 si j'ai bien compris).

- Voir sur IRC s'il est possible d'avoir les points de montages
  autrement que dans un xml avec les mots de passe en clair.
  Base MySQL etc. ?
    --> dans la version 2.3.3, il y les stream-auth qui semble
        permettre d'éviter les mots de passe en clair.

- Voir au niveau des logs. Il faut que je garde dans les
  logs qui a diffusé (quelle IP) et quand et garder
  les logs pendant exactement 1 an !
  Vérifier que l'IP est bien loguée d'ailleurs.

- Il faudra penser à baculacifier le fichier xml des points de
  montage.

- bien lire la page ci-dessus pour avoir une idée de l'achitecture
  générale :
  http://sourcefabric.booktype.pro/airtime-25-for-broadcasters/host-configuration/

- mettre en place une supervision par défaut de shinken
  avec les pages qui vont bien à tester. Rendre possible
  l'annulation de la supervision qui vaut true par défaut
  si l'environnement est "production". Définir un mail
  admin au niveau icecast2 et le mettre dans les contacts
  de l'hôte shinken.
  Bien réfléchir à l'organisation du bazar et tenter de
  faire un truc générique. L'idée serait peut-être de créer
  une ressource custom qui puisse déclencher de la supervision
  et le tout en prenant sa conf directement dans le code
  puppet et plus dans hiera, afin d'avoir accès aux données
  de la classe/module.

- Documenter Hiera et mettre une config définitive.







# Le mot de passe root de la machine de test est root-wr
# Le mot de passe du compte admin sur airtime est admin.

# Il faut que :
#
# deb http://repository/apt-mirror/apt.sourcefabric.org wheezy main
#
# soit dans les sources.list. En plus, la clé gpg est inaccessible
# car elle est dans le paquet sourcefabric-keyring du dépôt en
# question ce qui est complètement stupide mais bon... Il faudra
# faire en sorte que la clé soit acessible via wget.
#
# Ici on suppose que le clé gpg est déjà ajoutée.

export DEBIAN_FRONTEND='noninteractive'
apt-get install --yes icecast2
apt-get install --yes airtime

# Il faut configurer tout après installation car,
# si on configure d'abord icecast2 sur le port 80
# et qu'ensuite on installe airtime, l'installation de
# airtime plante car lors de l'installation de apache2
# airtime utilise le port 80 aussi et cela crée un
# conflit et cela plante alors apt-get.


# On configure maintenant apache2 sur le port 8080
# (pour airtime donc).
vim /etc/apache2/ports.conf # on indique le port 8080 au lieu de 80

# On met le vhost sur le port 8080.
# ServerName sur le fqdn du serveur.
# Modifier aussi le ServerAdmin et mettre l'adresse admin générique.
vim /etc/apache2/sites-enabled/airtime-vhost.conf

# On supprime le vhost default.
a2dissite default
invoke-rc.d apache2 restart

# Airtime doit savoir que Apache2 est sur le port 8080
# Dans la section [general], changer le champ port en
# conséquence.
vim /etc/airtime/airtime.conf

# Mettre le port sur 8080 aussi.
vim /etc/airtime/api_client.cfg

invoke-rc.d airtime-liquidsoap restart
invoke-rc.d airtime-playout restart
invoke-rc.d airtime-media-monitor restart
# Il faut ensuite que :
# invoke-rc.d airtime-media-monitor status
# ne retourne que du vert.

# TODO:
# 1. Il y a un mountpoint par défaut sur Icecast2, il faudrait le virer.
# 2. Il faudra trouver un moyen pour personnaliser le mot de passe
#    de la base de données PostgreSQL indiqué dans /etc/airtime/airtime.conf.
#    Peut-être via l'interface Airtime...



# Maintenant, on configure Icecast2.
vim /etc/icecast2/icecast.xml
# - Je change les 3 mots de passe en hackme-wr.
# - Je mets le hostname sur le fqdn du serveur.
# - Je mets le port sur 80.
# - Sans doute faudra-t-il mettre le loglevel à 2 voire 1, pas fait ici.
# - Je décommente la partie changeower pour mettre icecast2 (user) et
#   icecast (group).

# TODO: peut-on faire un système d'include au niveau du xml
#       de conf. La doc n'évoque rien de tel. Ça serait pratique
#       pour faire un fichier xml à part pour les mountpoints.

# TODO: en fait, il sera capital de ne pas tenir compte des log
#       au niveau INFO sans quoi si jamais dans airtime on laisse
#       activé un flux dont le mot de pass est incorrect par exemple
#       on aura en continu dans les logs de icecast :
#           INFO connection/_handle_source_request Source (/airtime_128) 
#           attempted to login with invalid or missing password
#       En continu toutes les 10 secondes maxi. Donc ça pourri
#       les logs.

# TODO: il faudra s'assurer que le système peut envoyer des
#       mails.

vim /etc/default/icecast2
# - Je mets USERID et GROUPID à root.
# - ENABLE=true

invoke-rc.d icecast2 restart

# Configuration postfix.
POSTFIX_MAILNAME="$HOSTNAME.ac-versailles.fr"
POSTFIX_DESTINATIONS="$HOSTNAME.ac-versailles.fr, $HOSTNAME.crdp.local, localhost.crdp.local, localhost"
POSTFIX_RELAYHOST="smtp.crdp.ac-versailles.fr"

answers=$(mktemp)

cat > "$answers" << EOF
postfix postfix/retry_upgrade_warning boolean
postfix postfix/kernel_version_warning boolean
postfix postfix/not_configured error
postfix postfix/sqlite_warning boolean
postfix postfix/root_address string
postfix postfix/rfc1035_violation boolean false
postfix postfix/mydomain_warning boolean
postfix postfix/mynetworks string 127.0.0.0/8
postfix postfix/mailbox_limit string 0
postfix postfix/relayhost string $POSTFIX_RELAYHOST
postfix postfix/procmail boolean true
postfix postfix/bad_recipient_delimiter error
postfix postfix/protocols select ipv4
postfix postfix/mailname string $POSTFIX_MAILNAME
postfix postfix/tlsmgr_upgrade_warning boolean
postfix postfix/recipient_delim string +
postfix postfix/main_mailer_type select Satellite system
postfix postfix/destinations string $POSTFIX_DESTINATIONS
postfix postfix/chattr boolean true
EOF

debconf-set-selections < "$answers"

# Suppression du fichier de réponses.
rm -f "$answers"

# Installation de postfix.
apt-get install --yes postfix

# J'ai dû ensuite rajouter une ligne dans le fichier main.cf de postfix.
# Comme ipv6 était désactivé sur le serveur, sans ce paramètre,
# à chaque envoie de mail il y a des warnings à propos d'ipV6.
echo "inet_protocols = ipv4" >> /etc/postfix/main.cf
invoke-rc.d postfix restart


# Rq: le mot de passe admin de l'interface Airtime se
#     change via le site d'administration Web.

