#!/bin/sh
### This is a file managed by Puppet, don't edit it. ###
<%-
    monitor_init         = scope['::ceph::monitor_init']
    monitors             = scope['::ceph::monitors']
    monitor_init_address = monitors[monitor_init]['address']
-%>

# The IP address of the inital monitor.
monitor_init_address='<%= monitor_init_address %>'

SPECIFIC_SHORT_OPTIONS='i:'
SPECIFIC_LONG_OPTIONS='id:'
SPECIFIC_SYNOPSIS='--id <num>'

GET_SPECIFIC_OPTIONS () {
    case "$1" in

        --id|-i)
            id="$2"
            return 2
        ;;

    esac
    return 0
}

. <%= @ceph_script_common %>

if check_working_dir "$id"
then
    if "$test"
    then
        # If it's just a test, we stop the script here.
        exit 0
    else
        # This is not a test, so we continue.
        true
    fi
else
    if "$test"
    then
        # If it's just a test, we stop the script here.
        exit 1
    else
        # This is not a test but checking failed. We stop.
        printf "End of the script.\n"
        exit 1
    fi
fi

if ! create_new_working_dir "$id"
then
    printf "End of the script.\n"
    exit 1
fi

# Create a file which defines the rights of the monitors in
# the cluster. A key is automatically generated. This key
# will be shared with the monitors to ensure authentication
# between them (to ensure that the monitors belong to the
# same cluster).
ceph-authtool --create-keyring "/tmp/$cluster.mon.keyring" \
    -n mon. --cap mon 'allow *' --gen-key
# Below, the same command where the key is explicitly provided
# with the --add-key option.
#
#   ceph-authtool --create-keyring "/tmp/$cluster.mon.keyring" \
#        -n mon. --cap mon 'allow *' --add-key "$monitors_key"

# This command just appends the contents of the file given by
# the --import-keyring option to the file given as argument.
ceph-authtool --import-keyring "/etc/ceph/$cluster.client.admin.keyring" \
     "/tmp/$cluster.mon.keyring"

# Generate a monitor map which represents the cluster
# topology regarding the monitors. Currently, the topology
# will be very simple: just one monitor. The generated file
# is non human readable.
monmaptool --create --add "$id" "$monitor_init_address" \
    --fsid "$fsid" "/tmp/monmap"

# Initialization of the monitor working directory in
# "/var/lib/ceph/mon/$cluster-$id". To do that, the command
# provides:
#       - the fsid of the cluster (in the conf file);
#       - the secret shared monitor key and the key of client.admin
#         (in /tmp/$cluster.mon.keyring);
#       - the initial monitor map (in /tmp/monmap)
#
# Note: the key of client.admin is a key shared between the
# administrator (which will use ceph clients in command lines)
# and the monitors.
#
ceph-mon --mkfs -i "$id" --conf "/etc/ceph/$cluster.conf"         \
    --monmap "/tmp/monmap" --keyring "/tmp/$cluster.mon.keyring"  \
    --cluster "$cluster"

# Delete the files in /tmp/.
rm "/tmp/$cluster.mon.keyring"
rm "/tmp/monmap"

# Without these files, the monitor daemon doesn't start.
touch "/var/lib/ceph/mon/$cluster-$id/done"
touch "/var/lib/ceph/mon/$cluster-$id/upstart"

# Start the monitor daemon.
stop ceph-mon cluster="$cluster" id="$id"
sleep 0.5
start ceph-mon cluster="$cluster" id="$id"


