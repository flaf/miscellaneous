#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1
export QUILT_PATCHES=debian/patches
export QUILT_REFRESH_ARGS='-p ab --no-timestamps --no-index'

PKG_NAME := wmi-cli

RULES_PATH := $(realpath $(firstword $(MAKEFILE_LIST)))
WORKING_DIR := $(realpath $(RULES_PATH:/debian/rules=))
DEBIAN_DIR := $(WORKING_DIR)/debian
BUILD_DIR := $(DEBIAN_DIR)/$(PKG_NAME)

%:
	dh $@

override_dh_clean:
	rm pysamba/version.pyc
	dh_clean

override_dh_install:
	dh_install
	# We just want the wmic binary.
	rm -rf $(BUILD_DIR)/bin
	rm -rf $(BUILD_DIR)/lib
	rm -f $(BUILD_DIR)/DEBIAN/post*
	rm -f $(BUILD_DIR)/DEBIAN/pre*

########################
### Personal targets ###
########################

git_clean:
	# Remove all files which mustn't belong to the git repository.
	dh_clean
	rm -rf $(DEBIAN_DIR)/wmi
	# All files in the working directory are removed except the debian/ directory.
	cd "$(WORKING_DIR)" && rm -rf GNUmakefile pyinclude.py pysamba Samba/
	# All files in the parent directory created by the building.
	cd "$(WORKING_DIR)" && rm -f ../$(PKG_NAME)*.deb
	cd "$(WORKING_DIR)" && rm -f ../$(PKG_NAME)*.dsc
	cd "$(WORKING_DIR)" && rm -f ../$(PKG_NAME)*.changes
	cd "$(WORKING_DIR)" && rm -f ../$(PKG_NAME)*.debian.tar.gz
	cd "$(WORKING_DIR)" && rm -f ../$(PKG_NAME)*.build

populate_working_dir: git_clean
	# Extract the source.
	cd "$(WORKING_DIR)" && tar --strip-components=1 -zxf ../$(PKG_NAME)_*.orig.tar.gz -C .

create_deb: populate_working_dir
	cd "$(WORKING_DIR)" && debuild -us -uc && echo 'Building is OK!'


