<%- |Array[Monitoring::HostConf] $hosts_conf| -%>
### This file is managed by Puppet, don't edit it. ###


<%-
  $hosts_conf.reduce(1) |$memo_index, $host| {

    unless $host['monitored'] { next($memo_index) }

    # It is purely aesthetic.
    $b_title     = "###    Host ${memo_index}: ${host['host_name']}    ###"
    $b_line      = inline_template('<%= "#" * @b_title.size %>')
    $begin_title = "${b_line}\n${b_title}\n${b_line}"
-%>
<%= $begin_title %>
define host {

    host_name <%= $host['host_name'] %>
    address   <%= $host['address'] %>
    use       <%= $host['templates'].join(',') %>
<%-
    $host.dig('custom_variables').then |$custom_vars| {
      if $custom_vars.empty { next() }
-%>

    # Customized variables.

<%= $custom_vars.::monitoring::customvars2str($indent=4) %>
<%-
  }
    $host.dig('extra_info').then |$extra_info| {
      if $extra_info.empty { next() }
-%>

    # Extra info.
<%-
      $host.dig('extra_info', 'ipmi_address').then |$ipmi| {
-%>

    ; ipmi_address    <%= $ipmi %>
<%-
      }
      $host.dig('extra_info', 'blacklist').then |$bl| {
        if $bl.empty { next() }
-%>

    ; Blacklist rules.
    ;
<%= ::monitoring::blacklist2str($bl, $indent_str='    ;  ') %>
<%-
      }
      $host.dig('extra_info', 'check_dns').then |$check_dns| {
        if $check_dns.empty { next() }
-%>

    ; DNS checks.
<%-
        $check_dns.each |$desc, $settings| {
-%>
    ;
    ;   description:      <%= $desc %>
    ;   fqdn:             <%= $settings['fqdn'] %>
<%-
          if 'server' in $settings {
-%>
    ;   server            <%= $settings['server'] %>
<%-
          }
          if 'expected-address' in $settings {
-%>
    ;   expected-address: <%= $settings['expected-address'] %>
<%-
          }
          if 'options' in $settings {
-%>
    ;   options:          <%= $settings.dig['options'] %>
<%-
          }
        }
      } # Enf of "if-check-dns".
    } # Enf of "if-extra-info".
-%>

}

<%-
    $has_ipmi      = $host.dig('extra_info', 'ipmi_address')
                       .then |$v| {true}.lest || {false}
    $has_check_dns = $host.dig('extra_info', 'check_dns')
                       .then |$v| {
                         if $v.empty { next(false) }
                         true
                       }.lest || {false}

    $required_dummy_host = ($has_check_dns or $has_ipmi)

    if $required_dummy_host {

      $dummy_custom_vars = ::monitoring::dummy2customvars(
        $host_name    = $host['host_name'],
        $host_address = $host['address'],
        $ipmi_address = $host.dig('extra_info', 'ipmi_address'),
        $check_dns    = $host.dig('extra_info', 'check_dns'),
      )

      $dummy_tpls = {'ping_tpl' => $has_ipmi, 'dns_tpl' => $has_check_dns}
        .reduce(['dummy-host_tpl*']) |$memo, $v| {
          [$tpl, $add] = $v
          if $add { $memo + [$tpl] } else { $memo }
        }

      $dummy_host = [{
        'host_name'        => "${host['host_name']}.dummy",
        'address'          => 'not-relevant',
        'templates'        => $dummy_tpls,
        'custom_variables' => $dummy_custom_vars,
        'extra_info'       => {},
        'monitored'        => true,
      }].::monitoring::sorthostsconf()[0]

-%>
# Dummy host for checks which care _indirectly_ related
# to the host <%= $host['host_name'] %>.
define host {

    host_name <%= $dummy_host['host_name'] %>
    address   <%= $dummy_host['address'] %>
    use       <%= $dummy_host['templates'].join(',') %>

    # Customized variables.

<%= $dummy_host['custom_variables'].::monitoring::customvars2str($indent=4) %>
}

<%-
    } # End of the "if-required-dummy-host".
-%>



<%-
    $memo_index + 1

  } # End of the loop "$hosts_conf".
-%>

