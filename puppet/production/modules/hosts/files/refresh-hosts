#!/usr/bin/ruby
### This file is managed by Puppet, don't edit it. ###

# Automatically, we insert the localhost host entry.
hosts_entries = { '127.0.0.1' => ['localhost'] }

files_array = Dir.glob("/etc/hosts.puppet.d/*.conf")

files_array.each do |f|

  fo = open(f)
  array = fo.read.strip.split(/[[:space:]]/)
  addr = array[0]
  array.shift # Remove the first element (the address).

  if not hosts_entries.has_key?(addr)
    hosts_entries[addr] = []
  end

  # Add the hostname only if it doesn't already exist.
  array.each do |hostname|
    if not hosts_entries[addr].member?(hostname)
      hosts_entries[addr].push(hostname)
    end
  end

  fo.close

  # Sort to have, for instance, [ 'foo.dom.tld', 'foo' ]
  # instead of [ 'foo', 'foo.dom.tld' ].
  hosts_entries[addr] = hosts_entries[addr].sort.reverse

end

# The max length as string among the addresses.
# It's just cosmetic.
column_width = hosts_entries.keys.map(&:length).max + 2

# The lines of hosts entries.
str = ''
hosts_entries.keys.sort.each do |addr|
  str += addr.ljust(column_width) + hosts_entries[addr].join(" ") + "\n"
end
str = str.strip

hosts_content = "### This file is managed by Puppet, don't edit it. ###

#{str}

# The following lines are desirable for IPv6 capable hosts
::1     localhost ip6-localhost ip6-loopback
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters

"

File.open('/etc/hosts', 'w') { |file| file.write(hosts_content) }

# Check if there are duplicated entries.
hostnames = hosts_entries.values.flatten # Array of all hostnames.
duplicated = hostnames.select { |h| hostnames.count(h) > 1 }.uniq

if duplicated.empty?
  msg = "Ok, /etc/hosts has been updated."
  puts msg
else
  msg = "Warning, /etc/hosts updated with duplicated hostname(s): " + \
        duplicated.join(', ') + '.'
  abort(msg)
end


