#!/bin/sh
### This file is managed by Puppet, don't edit it ###

SCRIPT_NAME="${0##*/}"
export LC_ALL='C'
export PATH='/usr/sbin:/usr/bin:/sbin:/bin'

SYNOPSIS="[--cluster <cluster>] --id <id>"
SHORT_OPTIONS='h,c:,i:'
LONG_OPTIONS='help,cluster:,id:'

print_help () {
    cat <<EOF
The syntax is:
    $SCRIPT_NAME --help
    $SCRIPT_NAME $SYNOPSIS
EOF
}

if ! TEMP=$(getopt -o "$SHORT_OPTIONS" -l "$LONG_OPTIONS" -n "$SCRIPT_NAME" -- "$@")
then
    echo "Syntax error with $SCRIPT_NAME command." >&2
    print_help
    exit 1
fi

eval set -- "$TEMP"
unset TEMP

# Default values.
CLUSTER='ceph'

while true
do
    case "$1" in

        --cluster|-c)
            CLUSTER="$2"
            shift 2
        ;;

        --id|-i)
            ID="$2"
            shift 2
        ;;

        --help|-h)
            print_help
            exit 0
        ;;

        --)
            shift 1
            break
        ;;

    esac

done

if ! printf "%s\n" "$ID" | grep -Eq '^([1-9][0-9]*|0)$'
then
    printf "The identifier of the OSD (ie the value of --id option) must be an integer.\n" >&2
    printf "Script aborted...\n" >&2
    exit 1
fi

if ! which bc >/dev/null
then
    printf "Sorry the bc command is not available.\n" >&2
    printf "Script aborted...\n" >&2
    exit 1
fi

weight=$(ceph osd tree --cluster "$CLUSTER" | grep " osd.$ID " | awk '{print $2}')

if ! printf "%s\n" "$weight" | grep -Eq '[\.0-9]+'
then
    printf "The \`ceph osd tree --cluster %s' command doesn't allow to retrieve the weight" "$CLUSTER" >&2
    printf " of the OSD osd.%s. Are you really sure this OSD exists in the cluster %s?\n" "$ID" "$CLUSTER" >&2
    exit 1
fi

if [ "$(echo $weight == 0 | bc 2>/dev/null)" != 1 ]
then
    printf "The test to check if osd.%s has a weight equal to 0 failed.\n" "$ID" >&2
    printf "Before to remove this OSD, set its weight to zero and wait for the end of the data balancing.\n" >&2
    printf "Script aborted...\n" >&2
    exit 1
fi

n=$(ps aux | grep 'cep[h]-osd' | grep -c -- "--cluster=$CLUSTER -i $ID")

if [ "$n" = 0 ]
then
    printf "No running process of the OSD osd.%s has been found on this host" "$ID" >&2
    printf " for the cluster %s.\n" "$CLUSTER" >&2
    printf "This command must be launched in the host where this OSD is running.\n" >&2
    printf "Script aborted...\n" >&2
    exit 1
fi

if [ 1 -lt "$n" ]
then
    printf "There is something wrong because it seems to have multiple processes " >&2
    printf "of the daemon osd.%s in the cluster %s. Check the output of \`ps aux'.\n" "$ID" "$CLUSTER" >&2
    printf "Script aborted...\n" >&2
    exit 1
fi

if [ ! -d "/var/lib/ceph/osd/$CLUSTER-$ID" ]
then
    printf "There is something wrong because the directory" >&2
    printf " \`/var/lib/ceph/osd/%s-%s' doesn't exist.\n" "$CLUSTER" "$ID" >&2
    printf "Script aborted...\n" >&2
    exit 1
fi


ceph osd out "$ID" --cluster "$CLUSTER"; sleep 1
stop ceph-osd id="$ID" cluster="$CLUSTER"; sleep 1
ceph osd crush remove osd."$ID" --cluster "$CLUSTER"; sleep 1
ceph auth del osd."$ID" --cluster "$CLUSTER";sleep 1
ceph osd rm "$ID" --cluster "$CLUSTER"; sleep 1

workdir="/var/lib/ceph/osd/$CLUSTER-$ID"
if mountpoint "$workdir" >/dev/null
then
    printf "The directory \`%s' is a mountpoint." "$workdir"
    printf " The partition is unmounted and /etc/fstab is updated.\n"
    umount "$workdir"; sleep 1
    rmdir "$workdir"
    sed -r -i -n "\|[[:space:]]+$workdir/?[[:space:]]+|!p" /etc/fstab
else
    printf "The directory \`%s' is not a mountpoint" "$workdir"
    printf " and it will not be deleted by this script."
    printf " Only the files 'ready' and 'upstart' are deleted.\n"
    rm "$workdir/ready"
    rm "$workdir/upstart"
fi




